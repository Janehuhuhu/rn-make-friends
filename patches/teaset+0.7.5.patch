diff --git a/node_modules/teaset/components/ListRow/TouchableOpacity.js b/node_modules/teaset/components/ListRow/TouchableOpacity.js
index 8fc32cf..f7033fd 100644
--- a/node_modules/teaset/components/ListRow/TouchableOpacity.js
+++ b/node_modules/teaset/components/ListRow/TouchableOpacity.js
@@ -1,10 +1,10 @@
 // TouchableOpacity.js
 
-import React, {Component} from 'react';
+import React, { Component } from 'react';
 import PropTypes from 'prop-types';
 
-import {Platform, TouchableWithoutFeedback, Animated, ViewPropTypes} from 'react-native';
-import Easing from 'react-native/Libraries/Animated/src/Easing';
+import { Platform, TouchableWithoutFeedback, Animated, ViewPropTypes } from 'react-native';
+import Easing from 'react-native/Libraries/Animated/Easing';
 import flattenStyle from 'react-native/Libraries/StyleSheet/flattenStyle';
 
 if (Platform.constants.reactNativeVersion.major === 0 && Platform.constants.reactNativeVersion.minor < 62) {
@@ -90,7 +90,7 @@ export default class TouchableOpacity extends Component {
         !this.props.rejectResponderTermination,
       onStartShouldSetResponder: () => !this.props.disabled,
     });
-    this.setState({pressability});
+    this.setState({ pressability });
   }
 
   measureInWindow(callback) {
@@ -149,7 +149,7 @@ export default class TouchableOpacity extends Component {
   }
 
   render() {
-    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} = this.state.pressability ? this.state.pressability.getEventHandlers() : {};
+    const { onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus } = this.state.pressability ? this.state.pressability.getEventHandlers() : {};
     return (
       <Animated.View
         accessible={this.props.accessible !== false}
@@ -164,7 +164,7 @@ export default class TouchableOpacity extends Component {
         accessibilityLiveRegion={this.props.accessibilityLiveRegion}
         accessibilityViewIsModal={this.props.accessibilityViewIsModal}
         accessibilityElementsHidden={this.props.accessibilityElementsHidden}
-        style={[this.props.style, {opacity: this.state.anim}]}
+        style={[this.props.style, { opacity: this.state.anim }]}
         nativeID={this.props.nativeID}
         testID={this.props.testID}
         onLayout={this.props.onLayout}
